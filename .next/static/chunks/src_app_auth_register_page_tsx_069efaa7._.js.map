{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/auth/register/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport Link from \"next/link\";\nimport axios from \"axios\";\n\nexport default function RegisterPage() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const router = useRouter();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError(\"\");\n\n    if (password !== confirmPassword) {\n      setError(\"Las contraseñas no coinciden\");\n      return;\n    }\n\n    setLoading(true);\n\n    try {\n      await axios.post(\"/api/auth/register\", {\n        username,\n        password,\n      });\n\n      router.push(\"/auth/login?registered=true\");\n    } catch (err: any) {\n      setError(\n        err.response?.data?.error || \"Error al registrar usuario. Por favor, inténtalo de nuevo.\"\n      );\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-[calc(100vh-80px)] flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full bg-white rounded-lg shadow-lg p-8\">\n        <div className=\"text-center mb-8\">\n          <h2 className=\"text-3xl font-bold text-gray-900\">\n            Crear Cuenta\n          </h2>\n          <p className=\"mt-2 text-gray-600\">\n            Regístrate para acceder a nuestro catálogo de juegos\n          </p>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"space-y-6\">\n          {error && (\n            <div className=\"alert alert-danger\" role=\"alert\">\n              {error}\n            </div>\n          )}\n\n          <div>\n            <label htmlFor=\"username\" className=\"form-label\">\n              Usuario\n            </label>\n            <input\n              id=\"username\"\n              type=\"text\"\n              className=\"form-control\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n              required\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"password\" className=\"form-label\">\n              Contraseña\n            </label>\n            <input\n              id=\"password\"\n              type=\"password\"\n              className=\"form-control\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              required\n            />\n          </div>\n\n          <div>\n            <label htmlFor=\"confirmPassword\" className=\"form-label\">\n              Confirmar Contraseña\n            </label>\n            <input\n              id=\"confirmPassword\"\n              type=\"password\"\n              className=\"form-control\"\n              value={confirmPassword}\n              onChange={(e) => setConfirmPassword(e.target.value)}\n              required\n            />\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"w-full btn btn-primary\"\n            disabled={loading}\n          >\n            {loading ? (\n              <>\n                <span className=\"spinner-border spinner-border-sm me-2\" role=\"status\" aria-hidden=\"true\"></span>\n                Registrando...\n              </>\n            ) : (\n              \"Registrarse\"\n            )}\n          </button>\n\n          <div className=\"text-center mt-4\">\n            <p className=\"text-gray-600\">\n              ¿Ya tienes una cuenta?{\" \"}\n              <Link href=\"/auth/login\" className=\"text-blue-600 hover:text-blue-800\">\n                Inicia sesión aquí\n              </Link>\n            </p>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvD,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACnC,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAChB,SAAS;QAET,IAAI,aAAa,iBAAiB;YAChC,SAAS;YACT;QACF;QAEA,WAAW;QAEX,IAAI;YACF,MAAM,wIAAA,CAAA,UAAK,CAAC,IAAI,CAAC,sBAAsB;gBACrC;gBACA;YACF;YAEA,OAAO,IAAI,CAAC;QACd,EAAE,OAAO,KAAU;YACjB,SACE,IAAI,QAAQ,EAAE,MAAM,SAAS;YAE/B,WAAW;QACb;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAmC;;;;;;sCAGjD,6LAAC;4BAAE,WAAU;sCAAqB;;;;;;;;;;;;8BAKpC,6LAAC;oBAAK,UAAU;oBAAc,WAAU;;wBACrC,uBACC,6LAAC;4BAAI,WAAU;4BAAqB,MAAK;sCACtC;;;;;;sCAIL,6LAAC;;8CACC,6LAAC;oCAAM,SAAQ;oCAAW,WAAU;8CAAa;;;;;;8CAGjD,6LAAC;oCACC,IAAG;oCACH,MAAK;oCACL,WAAU;oCACV,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,QAAQ;;;;;;;;;;;;sCAIZ,6LAAC;;8CACC,6LAAC;oCAAM,SAAQ;oCAAW,WAAU;8CAAa;;;;;;8CAGjD,6LAAC;oCACC,IAAG;oCACH,MAAK;oCACL,WAAU;oCACV,OAAO;oCACP,UAAU,CAAC,IAAM,YAAY,EAAE,MAAM,CAAC,KAAK;oCAC3C,QAAQ;;;;;;;;;;;;sCAIZ,6LAAC;;8CACC,6LAAC;oCAAM,SAAQ;oCAAkB,WAAU;8CAAa;;;;;;8CAGxD,6LAAC;oCACC,IAAG;oCACH,MAAK;oCACL,WAAU;oCACV,OAAO;oCACP,UAAU,CAAC,IAAM,mBAAmB,EAAE,MAAM,CAAC,KAAK;oCAClD,QAAQ;;;;;;;;;;;;sCAIZ,6LAAC;4BACC,MAAK;4BACL,WAAU;4BACV,UAAU;sCAET,wBACC;;kDACE,6LAAC;wCAAK,WAAU;wCAAwC,MAAK;wCAAS,eAAY;;;;;;oCAAc;;+CAIlG;;;;;;sCAIJ,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAE,WAAU;;oCAAgB;oCACJ;kDACvB,6LAAC,+JAAA,CAAA,UAAI;wCAAC,MAAK;wCAAc,WAAU;kDAAoC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASrF;GA1HwB;;QAMP,qIAAA,CAAA,YAAS;;;KANF","debugId":null}}]
}